[pylithapp.metadata]
base = [pylithapp.cfg]
keywords = [tetrahedral cells]
arguments = [step01_inflation.cfg]

[pylithapp]
dump_parameters.filename = output/step01_inflation-parameters.json
problem.progress_monitor.filename = output/step01_inflation-progress.txt

problem.defaults.name = step01_inflation

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# For time-dependent problems, we specify start and end times and an initial
# time step. With an initial time step of 0.2 yr, we use a start time of
# -0.2 yr so that the first solution occurs at 0 days.
[pylithapp.timedependent]
start_time = -0.2*year
initial_dt = 0.2*year
end_time = 5.0*year

# ----------------------------------------------------------------------
# initial conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
ic = [domain]
ic.domain = pylith.problems.InitialConditionDomain

[pylithapp.problem.ic.domain]
db = spatialdata.spatialdb.UniformDB
db.description = Initial conditions for domain
db.values = [displacement_x, displacement_y, displacement_z, pressure, trace_strain]
db.data = [0.0*m, 0.0*m, 0.0*m, 0.0*MPa, 0.0]

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
#bc = [boundary_xpos, boundary_xneg, boundary_ypos, boundary_yneg, boundary_zpos, boundary_zneg, boundary_magma, boundary_mush]
bc = [boundary_xpos, boundary_xneg, boundary_ypos, boundary_yneg, boundary_zneg, boundary_magma]

bc.boundary_xpos = pylith.bc.DirichletTimeDependent
bc.boundary_xneg = pylith.bc.DirichletTimeDependent
bc.boundary_ypos = pylith.bc.DirichletTimeDependent
bc.boundary_yneg = pylith.bc.DirichletTimeDependent
#bc.boundary_zpos = pylith.bc.DirichletTimeDependent
bc.boundary_zneg = pylith.bc.DirichletTimeDependent
bc.boundary_magma = pylith.bc.DirichletTimeDependent
#bc.boundary_mush = pylith.bc.DirichletTimeDependent


# The `label` corresponds to the name of the nodeset in the Cubit `bc.jou` file.
#
# We constrain the displacement component perpendicular to the boundary on the
# +x, -x, +y, -y and -z boundaries.
#
# We do not place any constraints on +z or the mush zone boundary, and leave
# them as free surfaces. 

[pylithapp.problem.bc.boundary_xpos]
constrained_dof = [0]
label = boundary_xpos
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +x

[pylithapp.problem.bc.boundary_xneg]
constrained_dof = [0]
label = boundary_xneg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -x

[pylithapp.problem.bc.boundary_ypos]
constrained_dof = [1]
label = boundary_ypos
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC +y

[pylithapp.problem.bc.boundary_yneg]
constrained_dof = [1]
label = boundary_yneg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -y


# [pylithapp.problem.bc.boundary_zpos]
# constrained_dof = [0]
# label = boundary_zpos
# field = pressure
# db_auxiliary_field = pylith.bc.ZeroDB
# db_auxiliary_field.description = Dirichlet BC +z

[pylithapp.problem.bc.boundary_zneg]
constrained_dof = [2]
label = boundary_zneg
field = displacement
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.description = Dirichlet BC -z

# [pylithapp.problem.bc.boundary_mush]
# constrained_dof = [0]
# label = boundary_mush
# field = pressure
# db_auxiliary_field = pylith.bc.ZeroDB
# db_auxiliary_field.description = Dirichlet BC mush-rock boundary

# We apply pressure on the edge of the magma body to have 
# flow into the mush zone

[pylithapp.problem.bc.boundary_magma]
constrained_dof = [0]
label = boundary_magma
field = pressure
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Flow into mush zone from magma body
db_auxiliary_field.values = [initial_amplitude]
db_auxiliary_field.data = [10.0*MPa]

# End of file
